version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: usdt_rates
      POSTGRES_HOST_AUTH_METHOD: trust
    command: ["postgres", "-c", "ssl=off"]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d usdt_rates"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    ports:
      - "50051:50051"
      - "9090:9090"
    depends_on:
      - postgres
      - jaeger
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_NAME=usdt_rates
      - PGSSLMODE=disable
      - ENV=${ENV}
      - DB_URL=${DB_URL}
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus
    ports:
      - "9094:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - app
    networks:
      - mynetwork


  jaeger:
    image: jaegertracing/all-in-one:1.29
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - mynetwork


volumes:
  pgdata:

networks:
  mynetwork:
    driver: bridge